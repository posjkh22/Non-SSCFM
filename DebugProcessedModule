[Debug Test]
Function: main(NonVoidTy): 0x16a6968
 BasicBlock: 0x16a4fa0  wBasicBlock: 0x16a2b40 [main%0], Type: 1 [ONE_BRANCH]
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: store [P]0x16aab80 [P]0x16aa478
   Instruction: store [P]0x16aab80 [P]0x16a9408
   Instruction: call   [CS-] gettimeofday [P]0x16a9468 [P]0x16aabe0 [S]gettimeofday
   Instruction: br [P]0x16a2c70
 BasicBlock: 0x16a2c70  wBasicBlock: 0x16a4240 [main%1], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16aa210 [P]0x16aa538
   Instruction: store [P]0x16a4560 [P]0x16aa4d8
   Instruction: call   [CS-] srand [P]0x16aae20 [S]srand
   Instruction: br [P]0x16a67f0
 BasicBlock: 0x16a67f0  wBasicBlock: 0x16a3b70 [main%2], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16aa4d8
   Instruction: zext [P]0x16a8918
   Instruction: mul [P]0x16aa190 [P]0x16aee48
   Instruction: call   [CS-] malloc [P]0x16aeec0 [S]malloc
   Instruction: br [P]0x16aa350
 BasicBlock: 0x16aa350  wBasicBlock: 0x16a16e0 [main%3], Type: 1 [ONE_BRANCH]
   Instruction: bitcast [P]0x16aef30
   Instruction: store [P]0x16aef98 [P]0x16aa658
   Instruction: load [P]0x16aa4d8
   Instruction: zext [P]0x16af078
   Instruction: mul [P]0x16aa190 [P]0x16ab4d8
   Instruction: call   [CS-] malloc [P]0x16ab550 [S]malloc
   Instruction: br [P]0x16a1d50
 BasicBlock: 0x16a1d50  wBasicBlock: 0x16a8a60 [main%4], Type: 1 [ONE_BRANCH]
   Instruction: bitcast [P]0x16ab5c0
   Instruction: store [P]0x16ab628 [P]0x16a9228
   Instruction: load [P]0x16aa4d8
   Instruction: zext [P]0x16ab708
   Instruction: mul [P]0x16aa190 [P]0x16ab768
   Instruction: call   [CS-] malloc [P]0x16ab7e0 [S]malloc
   Instruction: br [P]0x16a2080
 BasicBlock: 0x16a2080  wBasicBlock: 0x16a3800 [main%5], Type: 1 [ONE_BRANCH]
   Instruction: bitcast [P]0x16ab850
   Instruction: store [P]0x16ab8b8 [P]0x16a9288
   Instruction: load [P]0x16aa4d8
   Instruction: zext [P]0x16ab998
   Instruction: mul [P]0x16aa190 [P]0x16ab9f8
   Instruction: call   [CS-] malloc [P]0x16aba70 [S]malloc
   Instruction: br [P]0x16a2290
 BasicBlock: 0x16a2290  wBasicBlock: 0x16a2dc0 [main%6], Type: 1 [ONE_BRANCH]
   Instruction: bitcast [P]0x16afd00
   Instruction: store [P]0x16afd68 [P]0x16a92e8
   Instruction: load [P]0x16aa538
   Instruction: zext [P]0x16afe48
   Instruction: mul [P]0x16aa190 [P]0x16afea8
   Instruction: call   [CS-] malloc [P]0x16aff20 [S]malloc
   Instruction: br [P]0x16a2430
 BasicBlock: 0x16a2430  wBasicBlock: 0x16a3200 [main%7], Type: 1 [ONE_BRANCH]
   Instruction: bitcast [P]0x16aff90
   Instruction: store [P]0x16afff8 [P]0x16a9348
   Instruction: load [P]0x16aa538
   Instruction: zext [P]0x16b00d8
   Instruction: mul [P]0x16aa190 [P]0x16b0138
   Instruction: call   [CS-] malloc [P]0x16b01b0 [S]malloc
   Instruction: br [P]0x16a26a0
 BasicBlock: 0x16a26a0  wBasicBlock: 0x169ea60 [main%8], Type: 1 [ONE_BRANCH]
   Instruction: bitcast [P]0x16b0220
   Instruction: store [P]0x16b0288 [P]0x16a93a8
   Instruction: store [P]0x16aab80 [P]0x16aa598
   Instruction: br [P]0x16aa9a0
 BasicBlock: 0x16aa9a0  wBasicBlock: 0x169ed30 [main%9], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16aa598
   Instruction: load [P]0x16aa538
   Instruction: icmp [P]0x16b0448 [P]0x16b04a8
   Instruction: br [P]0x16b0520 [P]0x16aa050 [P]0x16a9fb0
 BasicBlock: 0x16a9fb0  wBasicBlock: 0x169f020 [main%10], Type: 1 [ONE_BRANCH]
   Instruction: call   [CS-] rand [S]rand
   Instruction: br [P]0x16a2220
 BasicBlock: 0x16a2220  wBasicBlock: 0x169f1d0 [main%11], Type: 1 [ONE_BRANCH]
   Instruction: srem [P]0x16b0608 [P]0x16abcb0
   Instruction: sitofp [P]0x16b0690
   Instruction: load [P]0x16a9348
   Instruction: load [P]0x16aa598
   Instruction: zext [P]0x16ae638
   Instruction: getelementptr [P]0x16b0b58 [P]0x16ae698
   Instruction: store [P]0x16b06e8 [P]0x16ae710
   Instruction: call   [CS-] rand [S]rand
   Instruction: br [P]0x16a9a50
 BasicBlock: 0x16a9a50  wBasicBlock: 0x169f6f0 [main%12], Type: 1 [ONE_BRANCH]
   Instruction: srem [P]0x16ae7f8 [P]0x16abcb0
   Instruction: sitofp [P]0x16ae880
   Instruction: load [P]0x16a93a8
   Instruction: load [P]0x16aa598
   Instruction: zext [P]0x16ae998
   Instruction: getelementptr [P]0x16ae938 [P]0x16ae9f8
   Instruction: store [P]0x16ae8d8 [P]0x16aea70
   Instruction: br [P]0x16aa000
 BasicBlock: 0x16aa000  wBasicBlock: 0x169fba0 [main%13], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16aa598
   Instruction: add [P]0x16aebb8 [P]0x16aae20
   Instruction: store [P]0x16aec30 [P]0x16aa598
   Instruction: br [P]0x16aa9a0
 BasicBlock: 0x16aa050  wBasicBlock: 0x169fe70 [main%14], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16aab80 [P]0x16aa598
   Instruction: br [P]0x16aa0a0
 BasicBlock: 0x16aa0a0  wBasicBlock: 0x16a0040 [main%15], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16aa598
   Instruction: load [P]0x16aa4d8
   Instruction: icmp [P]0x16b1bc8 [P]0x16b1c28
   Instruction: br [P]0x16b1ca0 [P]0x16ad400 [P]0x16aa0f0
 BasicBlock: 0x16aa0f0  wBasicBlock: 0x16a0330 [main%16], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16aa658
   Instruction: load [P]0x16aa598
   Instruction: zext [P]0x16b1de8
   Instruction: getelementptr [P]0x16b1d88 [P]0x16b1e48
   Instruction: store [P]0x16a4ff0 [P]0x16b1ec0
   Instruction: store [P]0x16aab80 [P]0x16aa5f8
   Instruction: br [P]0x16aa140
 BasicBlock: 0x16aa140  wBasicBlock: 0x16a0770 [main%17], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16aa5f8
   Instruction: load [P]0x16aa538
   Instruction: icmp [P]0x16b2088 [P]0x16b20e8
   Instruction: br [P]0x16b2160 [P]0x16abc60 [P]0x16abad0
 BasicBlock: 0x16abad0  wBasicBlock: 0x16a0a60 [main%18], Type: 1 [ONE_BRANCH]
   Instruction: call   [CS-] rand [S]rand
   Instruction: br [P]0x16a4a60
 BasicBlock: 0x16a4a60  wBasicBlock: 0x16a0c10 [main%19], Type: 2 [TWO_BRANCH]
   Instruction: srem [P]0x16b2248 [P]0x16ad4a0
   Instruction: icmp [P]0x16b22d0 [P]0x16aab80
   Instruction: br [P]0x16b2340 [P]0x16abb70 [P]0x16abb20
 BasicBlock: 0x16abb20  wBasicBlock: 0x16a0eb0 [main%20], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16a9348
   Instruction: load [P]0x16aa5f8
   Instruction: zext [P]0x16b2488
   Instruction: getelementptr [P]0x16b2428 [P]0x16b24e8
   Instruction: load [P]0x16b2560
   Instruction: fpext [P]0x16b25c8
   Instruction: load [P]0x16a93a8
   Instruction: load [P]0x16aa5f8
   Instruction: zext [P]0x16b26e8
   Instruction: getelementptr [P]0x16b2688 [P]0x16af0d8
   Instruction: load [P]0x16af150
   Instruction: load [P]0x16aa598
   Instruction: uitofp [P]0x16af218
   Instruction: fmul [P]0x16af1b8 [P]0x16af278
   Instruction: fpext [P]0x16af2f0
   Instruction: call   [CS-] cos [P]0x16af348 [S]cos
   Instruction: br [P]0x16a6490
 BasicBlock: 0x16a6490  wBasicBlock: 0x16c3210 [main%21], Type: 1 [ONE_BRANCH]
   Instruction: fmul [P]0x16b2628 [P]0x16af3c0
   Instruction: load [P]0x16aa658
   Instruction: load [P]0x16aa598
   Instruction: zext [P]0x16af4f8
   Instruction: getelementptr [P]0x16af498 [P]0x16af558
   Instruction: load [P]0x16af5d0
   Instruction: fpext [P]0x16af638
   Instruction: fadd [P]0x16af698 [P]0x16af440
   Instruction: fptrunc [P]0x16af710
   Instruction: store [P]0x16af768 [P]0x16af5d0
   Instruction: br [P]0x16abbc0
 BasicBlock: 0x16abb70  wBasicBlock: 0x16c3830 [main%22], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16a9348
   Instruction: load [P]0x16aa5f8
   Instruction: zext [P]0x16b0808
   Instruction: getelementptr [P]0x16b07a8 [P]0x16b0868
   Instruction: load [P]0x16b08e0
   Instruction: fpext [P]0x16b0948
   Instruction: load [P]0x16a93a8
   Instruction: load [P]0x16aa5f8
   Instruction: zext [P]0x16b0a68
   Instruction: getelementptr [P]0x16b0a08 [P]0x16b0ac8
   Instruction: load [P]0x16af860
   Instruction: load [P]0x16aa598
   Instruction: uitofp [P]0x16af928
   Instruction: fmul [P]0x16af8c8 [P]0x16af988
   Instruction: fpext [P]0x16afa00
   Instruction: call   [CS-] sin [P]0x16afa58 [S]sin
   Instruction: br [P]0x16a9850
 BasicBlock: 0x16a9850  wBasicBlock: 0x16c40f0 [main%23], Type: 1 [ONE_BRANCH]
   Instruction: fmul [P]0x16b09a8 [P]0x16afad0
   Instruction: load [P]0x16aa658
   Instruction: load [P]0x16aa598
   Instruction: zext [P]0x16afc08
   Instruction: getelementptr [P]0x16afba8 [P]0x16afc68
   Instruction: load [P]0x16b4790
   Instruction: fpext [P]0x16b47f8
   Instruction: fadd [P]0x16b4858 [P]0x16afb50
   Instruction: fptrunc [P]0x16b48d0
   Instruction: store [P]0x16b4928 [P]0x16b4790
   Instruction: br [P]0x16abbc0
 BasicBlock: 0x16abbc0  wBasicBlock: 0x16c4710 [main%24], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16a9228
   Instruction: load [P]0x16aa598
   Instruction: zext [P]0x16b4ac8
   Instruction: getelementptr [P]0x16b4a68 [P]0x16b4b28
   Instruction: store [P]0x16a4ff0 [P]0x16b4ba0
   Instruction: br [P]0x16abc10
 BasicBlock: 0x16abc10  wBasicBlock: 0x16c4ac0 [main%25], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16aa5f8
   Instruction: add [P]0x16b4ce8 [P]0x16aae20
   Instruction: store [P]0x16b4d60 [P]0x16aa5f8
   Instruction: br [P]0x16aa140
 BasicBlock: 0x16abc60  wBasicBlock: 0x16c4d90 [main%26], Type: 1 [ONE_BRANCH]
   Instruction: br [P]0x16ad3b0
 BasicBlock: 0x16ad3b0  wBasicBlock: 0x16c4ed0 [main%27], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16aa598
   Instruction: add [P]0x16b4ef8 [P]0x16aae20
   Instruction: store [P]0x16b4f70 [P]0x16aa598
   Instruction: br [P]0x16aa0a0
 BasicBlock: 0x16ad400  wBasicBlock: 0x16c51a0 [main%28], Type: 3 [CALL]
   Instruction: load [P]0x16aa4d8
   Instruction: load [P]0x16a9408
   Instruction: load [P]0x16aa658
   Instruction: load [P]0x16a9228
   Instruction: load [P]0x16a9288
   Instruction: load [P]0x16a92e8
   Instruction: call   [CS+] fft_float [P]0x16b50a8 [P]0x16b5108 [P]0x16b5168 [P]0x16b51c8 [P]0x16b5228 [P]0x16b5288 [P]0x16ad4e8
   Instruction: br [P]0x16a10d0
 BasicBlock: 0x16a10d0  wBasicBlock: 0x16c56b0 [main%29], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16aa658
   Instruction: bitcast [P]0x16b53e8
   Instruction: call   [CS-] free [P]0x16b5448 [S]free
   Instruction: br [P]0x16a9b00
 BasicBlock: 0x16a9b00  wBasicBlock: 0x16c5960 [main%30], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16a9228
   Instruction: bitcast [P]0x16b5528
   Instruction: call   [CS-] free [P]0x16b5588 [S]free
   Instruction: br [P]0x16aa400
 BasicBlock: 0x16aa400  wBasicBlock: 0x16c5c10 [main%31], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16a9288
   Instruction: bitcast [P]0x16b5668
   Instruction: call   [CS-] free [P]0x16b56c8 [S]free
   Instruction: br [P]0x16a1e00
 BasicBlock: 0x16a1e00  wBasicBlock: 0x16c5ec0 [main%32], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16a92e8
   Instruction: bitcast [P]0x16b0c38
   Instruction: call   [CS-] free [P]0x16b0c98 [S]free
   Instruction: br [P]0x16a2130
 BasicBlock: 0x16a2130  wBasicBlock: 0x16c6170 [main%33], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16a9348
   Instruction: bitcast [P]0x16b0d78
   Instruction: call   [CS-] free [P]0x16b0dd8 [S]free
   Instruction: br [P]0x16a2340
 BasicBlock: 0x16a2340  wBasicBlock: 0x16c6420 [main%34], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16a93a8
   Instruction: bitcast [P]0x16b0eb8
   Instruction: call   [CS-] free [P]0x16b0f18 [S]free
   Instruction: br [P]0x16a25b0
 BasicBlock: 0x16a25b0  wBasicBlock: 0x16c66d0 [main%35], Type: 1 [ONE_BRANCH]
   Instruction: call   [CS-] gettimeofday [P]0x16a8598 [P]0x16aabe0 [S]gettimeofday
   Instruction: br [P]0x16a27a0
 BasicBlock: 0x16a27a0  wBasicBlock: 0x16c68c0 [main%36], Type: 1 [ONE_BRANCH]
   Instruction: getelementptr [P]0x16a8598 [P]0x16aab80 [P]0x16aab80
   Instruction: load [P]0x16b10c8
   Instruction: getelementptr [P]0x16a9468 [P]0x16aab80 [P]0x16aab80
   Instruction: load [P]0x16b11c8
   Instruction: sub [P]0x16b1138 [P]0x16b1238
   Instruction: mul [P]0x16b12b0 [P]0x16ad510
   Instruction: getelementptr [P]0x16a8598 [P]0x16aab80 [P]0x16aae20
   Instruction: load [P]0x16b13a8
   Instruction: getelementptr [P]0x16a9468 [P]0x16aab80 [P]0x16aae20
   Instruction: load [P]0x16b14a8
   Instruction: sub [P]0x16b1418 [P]0x16b1518
   Instruction: sdiv [P]0x16b1590 [P]0x16ad510
   Instruction: add [P]0x16b1320 [P]0x16b1600
   Instruction: call   [CS-] printf [P]0x16ad588 [P]0x16b1670 [S]printf
   Instruction: br [P]0x16a2850
 BasicBlock: 0x16a2850  wBasicBlock: 0x16c7bb0 [main%37], Type: 4 [Return]
   Instruction: load [P]0x16aa478
   Instruction: ret [P]0x16b1768
Function: gettimeofday(VoidTy): 0x16a56c8
Function: srand(VoidTy): 0x16a6bd8
Function: malloc(VoidTy): 0x16a8da8
Function: rand(VoidTy): 0x16a8e38
Function: cos(VoidTy): 0x16a5808
Function: sin(VoidTy): 0x16a9068
Function: free(VoidTy): 0x16a90f8
Function: printf(VoidTy): 0x16a9188
Function: IsPowerOfTwo(NonVoidTy): 0x16a6a48
 BasicBlock: 0x16ad450  wBasicBlock: 0x16c88a0 [IsPowerOfTwo%0], Type: 2 [TWO_BRANCH]
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: store [P]0x16a8960 [P]0x16b1a18
   Instruction: load [P]0x16b1a18
   Instruction: icmp [P]0x16b1af8 [P]0x16ad4a0
   Instruction: br [P]0x16b1b70 [P]0x16b1810 [P]0x16aa910
 BasicBlock: 0x16aa910  wBasicBlock: 0x16c8c90 [IsPowerOfTwo%1], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16aab80 [P]0x16b19b8
   Instruction: br [P]0x16b1900
 BasicBlock: 0x16b1810  wBasicBlock: 0x16c8e60 [IsPowerOfTwo%2], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16b1a18
   Instruction: load [P]0x16b1a18
   Instruction: sub [P]0x16b7908 [P]0x16aae20
   Instruction: and [P]0x16b78a8 [P]0x16b7980
   Instruction: icmp [P]0x16b79f0 [P]0x16aab80
   Instruction: br [P]0x16b7a60 [P]0x16b18b0 [P]0x16b1860
 BasicBlock: 0x16b1860  wBasicBlock: 0x16c9270 [IsPowerOfTwo%3], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16aab80 [P]0x16b19b8
   Instruction: br [P]0x16b1900
 BasicBlock: 0x16b18b0  wBasicBlock: 0x16c9440 [IsPowerOfTwo%4], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16aae20 [P]0x16b19b8
   Instruction: br [P]0x16b1900
 BasicBlock: 0x16b1900  wBasicBlock: 0x16c9610 [IsPowerOfTwo%5], Type: 0 [Return]
   Instruction: load [P]0x16b19b8
   Instruction: ret [P]0x16b7d08
Function: NumberOfBitsNeeded(NonVoidTy): 0x16a9528
 BasicBlock: 0x16b1950  wBasicBlock: 0x16c9920 [NumberOfBitsNeeded%0], Type: 2 [TWO_BRANCH]
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: store [P]0x16b0b10 [P]0x16b8078
   Instruction: load [P]0x16b8078
   Instruction: icmp [P]0x16b81b8 [P]0x16ad4a0
   Instruction: br [P]0x16b8230 [P]0x16b7e00 [P]0x16b7db0
 BasicBlock: 0x16b7db0  wBasicBlock: 0x16c9d10 [NumberOfBitsNeeded%1], Type: 1 [ONE_BRANCH]
   Instruction: load [S]stderr
   Instruction: load [P]0x16b8078
   Instruction: call   [CS-] fprintf [P]0x16b8318 [P]0x16b8028 [P]0x16b8378 [S]fprintf
   Instruction: br [P]0x16b7e00
 BasicBlock: 0x16b7e00  wBasicBlock: 0x16ca020 [NumberOfBitsNeeded%2], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16aab80 [P]0x16b80d8
   Instruction: br [P]0x16b7e50
 BasicBlock: 0x16b7e50  wBasicBlock: 0x16ca210 [NumberOfBitsNeeded%3], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16b8078
   Instruction: load [P]0x16b80d8
   Instruction: shl [P]0x16aae20 [P]0x16b8628
   Instruction: and [P]0x16b85c8 [P]0x16b86a0
   Instruction: icmp [P]0x16b8710 [P]0x16aab80
   Instruction: br [P]0x16b8780 [P]0x16b7ef0 [P]0x16b7ea0
 BasicBlock: 0x16b7ea0  wBasicBlock: 0x16ca640 [NumberOfBitsNeeded%4], Type: 0 [Return]
   Instruction: load [P]0x16b80d8
   Instruction: ret [P]0x16b8868
 BasicBlock: 0x16b7ef0  wBasicBlock: 0x16ca810 [NumberOfBitsNeeded%5], Type: 1 [ONE_BRANCH]
   Instruction: br [P]0x16b7f40
 BasicBlock: 0x16b7f40  wBasicBlock: 0x16ca970 [NumberOfBitsNeeded%6], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16b80d8
   Instruction: add [P]0x16b8988 [P]0x16aae20
   Instruction: store [P]0x16b8a00 [P]0x16b80d8
   Instruction: br [P]0x16b7e50
Function: fprintf(VoidTy): 0x16a95b8
Function: ReverseBits(NonVoidTy): 0x16a9678
 BasicBlock: 0x16b7f90  wBasicBlock: 0x16caee0 [ReverseBits%0], Type: 1 [ONE_BRANCH]
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: store [P]0x16b8b20 [P]0x16b8d28
   Instruction: store [P]0x16b8b48 [P]0x16b8d88
   Instruction: store [P]0x16aab80 [P]0x16b8e48
   Instruction: store [P]0x16aab80 [P]0x16b8de8
   Instruction: br [P]0x16b8b80
 BasicBlock: 0x16b8b80  wBasicBlock: 0x16cb420 [ReverseBits%1], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16b8de8
   Instruction: load [P]0x16b8d88
   Instruction: icmp [P]0x16b9108 [P]0x16b9168
   Instruction: br [P]0x16b91e0 [P]0x16b8c70 [P]0x16b8bd0
 BasicBlock: 0x16b8bd0  wBasicBlock: 0x16cb710 [ReverseBits%2], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16b8e48
   Instruction: shl [P]0x16b92c8 [P]0x16aae20
   Instruction: load [P]0x16b8d28
   Instruction: and [P]0x16b9398 [P]0x16aae20
   Instruction: or [P]0x16b9340 [P]0x16b9410
   Instruction: store [P]0x16b9480 [P]0x16b8e48
   Instruction: load [P]0x16b8d28
   Instruction: lshr [P]0x16b9558 [P]0x16aae20
   Instruction: store [P]0x16b95d0 [P]0x16b8d28
   Instruction: br [P]0x16b8c20
 BasicBlock: 0x16b8c20  wBasicBlock: 0x16cbd00 [ReverseBits%3], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16b8de8
   Instruction: add [P]0x16b9708 [P]0x16aae20
   Instruction: store [P]0x16b9780 [P]0x16b8de8
   Instruction: br [P]0x16b8b80
 BasicBlock: 0x16b8c70  wBasicBlock: 0x16cbfd0 [ReverseBits%4], Type: 0 [Return]
   Instruction: load [P]0x16b8e48
   Instruction: ret [P]0x16b98b8
Function: Index_to_frequency(NonVoidTy): 0x16a9768
 BasicBlock: 0x16b8cc0  wBasicBlock: 0x16cc2e0 [Index_to_frequency%0], Type: 2 [TWO_BRANCH]
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: store [P]0x16b9960 [P]0x16b9ca8
   Instruction: store [P]0x16b9988 [P]0x16b9d08
   Instruction: load [P]0x16b9d08
   Instruction: load [P]0x16b9ca8
   Instruction: icmp [P]0x16b9e68 [P]0x16b9ec8
   Instruction: br [P]0x16b9f40 [P]0x16b9a10 [P]0x16b99c0
 BasicBlock: 0x16b99c0  wBasicBlock: 0x16cc840 [Index_to_frequency%1], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16aa6a0 [P]0x16b9c48
   Instruction: br [P]0x16b9b50
 BasicBlock: 0x16b9a10  wBasicBlock: 0x16cca30 [Index_to_frequency%2], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16b9d08
   Instruction: load [P]0x16b9ca8
   Instruction: udiv [P]0x16ba168 [P]0x16ad4a0
   Instruction: icmp [P]0x16ba108 [P]0x16ba1e0
   Instruction: br [P]0x16ba250 [P]0x16b9ab0 [P]0x16b9a60
 BasicBlock: 0x16b9a60  wBasicBlock: 0x16ccdd0 [Index_to_frequency%3], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16b9d08
   Instruction: uitofp [P]0x16ba338
   Instruction: load [P]0x16b9ca8
   Instruction: uitofp [P]0x16ba3f8
   Instruction: fdiv [P]0x16ba398 [P]0x16ba458
   Instruction: store [P]0x16ba4d0 [P]0x16b9c48
   Instruction: br [P]0x16b9b50
 BasicBlock: 0x16b9ab0  wBasicBlock: 0x16cd210 [Index_to_frequency%4], Type: 1 [ONE_BRANCH]
   Instruction: br [P]0x16b9b00
 BasicBlock: 0x16b9b00  wBasicBlock: 0x16cd370 [Index_to_frequency%5], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16b9ca8
   Instruction: load [P]0x16b9d08
   Instruction: sub [P]0x16ba668 [P]0x16ba6c8
   Instruction: uitofp [P]0x16ba740
   Instruction: fsub [P]0x16b9bf0 [P]0x16ba798
   Instruction: load [P]0x16b9ca8
   Instruction: uitofp [P]0x16ba868
   Instruction: fdiv [P]0x16ba810 [P]0x16ba8c8
   Instruction: store [P]0x16ba940 [P]0x16b9c48
   Instruction: br [P]0x16b9b50
 BasicBlock: 0x16b9b50  wBasicBlock: 0x16cd940 [Index_to_frequency%6], Type: 0 [Return]
   Instruction: load [P]0x16b9c48
   Instruction: ret [P]0x16baa78
Function: fft_float(VoidTy): 0x16a98a8
 BasicBlock: 0x16b9ba0  wBasicBlock: 0x16cdc50 [fft_float%0], Type: 3 [CALL]
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: store [P]0x16bab20 [P]0x16bb9a8
   Instruction: store [P]0x16bab48 [P]0x16bba08
   Instruction: store [P]0x16bab70 [P]0x16bba68
   Instruction: store [P]0x16bab98 [P]0x16bbac8
   Instruction: store [P]0x16babc0 [P]0x16bbb28
   Instruction: store [P]0x16babe8 [P]0x16bbb88
   Instruction: store [P]0x16aa960 [P]0x16bbe88
   Instruction: load [P]0x16bb9a8
   Instruction: call   [CS-] IsPowerOfTwo [P]0x16bc6e8 [S]IsPowerOfTwo
   Instruction: br [P]0x16a9ca0
 BasicBlock: 0x16a9ca0  wBasicBlock: 0x16cede0 [fft_float%1], Type: 2 [TWO_BRANCH]
   Instruction: icmp [P]0x16bc760 [P]0x16aab80
   Instruction: br [P]0x16bc7e0 [P]0x16bad20 [P]0x16bad70
 BasicBlock: 0x16bad20  wBasicBlock: 0x16ceff0 [fft_float%2], Type: 1 [ONE_BRANCH]
   Instruction: load [S]stderr
   Instruction: load [P]0x16bb9a8
   Instruction: call   [CS-] fprintf [P]0x16bc8c8 [P]0x16bb6c8 [P]0x16bc928 [S]fprintf
   Instruction: br [P]0x16bad70
 BasicBlock: 0x16bad70  wBasicBlock: 0x16cf2e0 [fft_float%3], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16bba08
   Instruction: icmp [P]0x16bca98 [P]0x16aab80
   Instruction: br [P]0x16bcb10 [P]0x16bae10 [P]0x16badc0
 BasicBlock: 0x16badc0  wBasicBlock: 0x16cf560 [fft_float%4], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbe88
   Instruction: fsub [P]0x16b9bf0 [P]0x16bcbf8
   Instruction: store [P]0x16bcc70 [P]0x16bbe88
   Instruction: br [P]0x16bae10
 BasicBlock: 0x16bae10  wBasicBlock: 0x16cf830 [fft_float%5], Type: 3 [CALL]
   Instruction: load [P]0x16bba68
   Instruction: bitcast [P]0x16bcda8
   Instruction: call   [CS-] CheckPointer [P]0x16bce08 [P]0x16bb748 [S]CheckPointer
   Instruction: br [P]0x16a46b0
 BasicBlock: 0x16a46b0  wBasicBlock: 0x16cfb00 [fft_float%6], Type: 3 [CALL]
   Instruction: load [P]0x16bbb28
   Instruction: bitcast [P]0x16bcf08
   Instruction: call   [CS-] CheckPointer [P]0x16bcf68 [P]0x16bb7c8 [S]CheckPointer
   Instruction: br [P]0x16a9bb0
 BasicBlock: 0x16a9bb0  wBasicBlock: 0x16cfdd0 [fft_float%7], Type: 3 [CALL]
   Instruction: load [P]0x16bbb88
   Instruction: bitcast [P]0x16bd068
   Instruction: call   [CS-] CheckPointer [P]0x16bd0c8 [P]0x16bb848 [S]CheckPointer
   Instruction: br [P]0x16a1b20
 BasicBlock: 0x16a1b20  wBasicBlock: 0x16d00a0 [fft_float%8], Type: 3 [CALL]
   Instruction: load [P]0x16bb9a8
   Instruction: call   [CS-] NumberOfBitsNeeded [P]0x16bd1c8 [S]NumberOfBitsNeeded
   Instruction: br [P]0x16a1eb0
 BasicBlock: 0x16a1eb0  wBasicBlock: 0x16d02e0 [fft_float%9], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16bd240 [P]0x16bbbe8
   Instruction: store [P]0x16aab80 [P]0x16bbc48
   Instruction: br [P]0x16bae60
 BasicBlock: 0x16bae60  wBasicBlock: 0x16d0540 [fft_float%10], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16bbc48
   Instruction: load [P]0x16bb9a8
   Instruction: icmp [P]0x16bd408 [P]0x16bd468
   Instruction: br [P]0x16bd4e0 [P]0x16bb040 [P]0x16baeb0
 BasicBlock: 0x16baeb0  wBasicBlock: 0x16d0830 [fft_float%11], Type: 3 [CALL]
   Instruction: load [P]0x16bbc48
   Instruction: load [P]0x16bbbe8
   Instruction: call   [CS-] ReverseBits [P]0x16bd5c8 [P]0x16bd628 [S]ReverseBits
   Instruction: br [P]0x16a4760
 BasicBlock: 0x16a4760  wBasicBlock: 0x16d0b00 [fft_float%12], Type: 2 [TWO_BRANCH]
   Instruction: store [P]0x16bd6b8 [P]0x16bbca8
   Instruction: load [P]0x16bba68
   Instruction: load [P]0x16bbc48
   Instruction: zext [P]0x16bd808
   Instruction: getelementptr [P]0x16bd7a8 [P]0x16bd868
   Instruction: load [P]0x16bd8e0
   Instruction: load [P]0x16bbb28
   Instruction: load [P]0x16bbca8
   Instruction: zext [P]0x16bda08
   Instruction: getelementptr [P]0x16bd9a8 [P]0x16bda68
   Instruction: store [P]0x16bd948 [P]0x16bdae0
   Instruction: load [P]0x16bbac8
   Instruction: icmp [P]0x16bdbc8 [P]0x16aac70
   Instruction: br [P]0x16bdc40 [P]0x16baf50 [P]0x16baf00
 BasicBlock: 0x16baf00  wBasicBlock: 0x16d12d0 [fft_float%13], Type: 1 [ONE_BRANCH]
   Instruction: br [P]0x16bafa0
 BasicBlock: 0x16baf50  wBasicBlock: 0x16d1410 [fft_float%14], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbac8
   Instruction: load [P]0x16bbc48
   Instruction: zext [P]0x16bdde8
   Instruction: getelementptr [P]0x16bdd88 [P]0x16bde48
   Instruction: load [P]0x16bdec0
   Instruction: fpext [P]0x16bdf28
   Instruction: br [P]0x16bafa0
 BasicBlock: 0x16bafa0  wBasicBlock: 0x16d1810 [fft_float%15], Type: 1 [ONE_BRANCH]
   Instruction: phi [P]0x16aa6a0 [P]0x16bdf88
   Instruction: fptrunc [P]0x16bb638
   Instruction: load [P]0x16bbb88
   Instruction: load [P]0x16bbca8
   Instruction: zext [P]0x16be158
   Instruction: getelementptr [P]0x16be0f8 [P]0x16be1b8
   Instruction: store [P]0x16be098 [P]0x16be230
   Instruction: br [P]0x16baff0
 BasicBlock: 0x16baff0  wBasicBlock: 0x16d1cc0 [fft_float%16], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbc48
   Instruction: add [P]0x16be378 [P]0x16aae20
   Instruction: store [P]0x16be3f0 [P]0x16bbc48
   Instruction: br [P]0x16bae60
 BasicBlock: 0x16bb040  wBasicBlock: 0x16d1f90 [fft_float%17], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16aae20 [P]0x16bbe28
   Instruction: store [P]0x16ad4a0 [P]0x16bbdc8
   Instruction: br [P]0x16bb090
 BasicBlock: 0x16bb090  wBasicBlock: 0x16d21f0 [fft_float%18], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16bbdc8
   Instruction: load [P]0x16bb9a8
   Instruction: icmp [P]0x16be688 [P]0x16be6e8
   Instruction: br [P]0x16be760 [P]0x16bb400 [P]0x16bb0e0
 BasicBlock: 0x16bb0e0  wBasicBlock: 0x16d24e0 [fft_float%19], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbe88
   Instruction: load [P]0x16bbdc8
   Instruction: uitofp [P]0x16be8a8
   Instruction: fdiv [P]0x16be848 [P]0x16be908
   Instruction: store [P]0x16be980 [P]0x16bbfa8
   Instruction: load [P]0x16bbfa8
   Instruction: fmul [P]0x16bb880 [P]0x16bea58
   Instruction: call   [CS-] sin [P]0x16bead0 [S]sin
   Instruction: br [P]0x16a6720
 BasicBlock: 0x16a6720  wBasicBlock: 0x16d2a20 [fft_float%20], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16beb40 [P]0x16bc008
   Instruction: load [P]0x16bbfa8
   Instruction: fsub [P]0x16b9bf0 [P]0x16bec28
   Instruction: call   [CS-] sin [P]0x16beca0 [S]sin
   Instruction: br [P]0x16aa240
 BasicBlock: 0x16aa240  wBasicBlock: 0x16d2d80 [fft_float%21], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16bed10 [P]0x16bc068
   Instruction: load [P]0x16bbfa8
   Instruction: fmul [P]0x16bb880 [P]0x16bedf8
   Instruction: call   [CS-] cos [P]0x16bee70 [S]cos
   Instruction: br [P]0x16a1bd0
 BasicBlock: 0x16a1bd0  wBasicBlock: 0x16d30e0 [fft_float%22], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16beee0 [P]0x16bc0c8
   Instruction: load [P]0x16bbfa8
   Instruction: fsub [P]0x16b9bf0 [P]0x16befc8
   Instruction: call   [CS-] cos [P]0x16bf040 [S]cos
   Instruction: br [P]0x16a1fd0
 BasicBlock: 0x16a1fd0  wBasicBlock: 0x16d3440 [fft_float%23], Type: 1 [ONE_BRANCH]
   Instruction: store [P]0x16bf0b0 [P]0x16bc128
   Instruction: load [P]0x16bc128
   Instruction: fmul [P]0x16bb8c0 [P]0x16bf198
   Instruction: store [P]0x16bf210 [P]0x16bc188
   Instruction: store [P]0x16aab80 [P]0x16bbc48
   Instruction: br [P]0x16bb130
 BasicBlock: 0x16bb130  wBasicBlock: 0x16d3830 [fft_float%24], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16bbc48
   Instruction: load [P]0x16bb9a8
   Instruction: icmp [P]0x16bf3c8 [P]0x16bf428
   Instruction: br [P]0x16bf4a0 [P]0x16bb360 [P]0x16bb180
 BasicBlock: 0x16bb180  wBasicBlock: 0x16d3b20 [fft_float%25], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bc0c8
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb930
   Instruction: store [P]0x16bf588 [P]0x16bf618
   Instruction: load [P]0x16bc128
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb960
   Instruction: store [P]0x16bf708 [P]0x16bf798
   Instruction: load [P]0x16bc008
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb930
   Instruction: store [P]0x16bf888 [P]0x16bf918
   Instruction: load [P]0x16bc068
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb960
   Instruction: store [P]0x16bfa08 [P]0x16bfa98
   Instruction: load [P]0x16bbc48
   Instruction: store [P]0x16bfb88 [P]0x16bbca8
   Instruction: store [P]0x16aab80 [P]0x16bbd68
   Instruction: br [P]0x16bb1d0
 BasicBlock: 0x16bb1d0  wBasicBlock: 0x16d44b0 [fft_float%26], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16bbd68
   Instruction: load [P]0x16bbe28
   Instruction: icmp [P]0x16bfd48 [P]0x16bfda8
   Instruction: br [P]0x16bfe20 [P]0x16bb2c0 [P]0x16bb220
 BasicBlock: 0x16bb220  wBasicBlock: 0x16d47a0 [fft_float%27], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bc188
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb960
   Instruction: load [P]0x16bff98
   Instruction: fmul [P]0x16bff08 [P]0x16c0008
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb930
   Instruction: load [P]0x16c0108
   Instruction: fsub [P]0x16c0080 [P]0x16c0178
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb900
   Instruction: store [P]0x16c01f0 [P]0x16c0278
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb960
   Instruction: load [P]0x16c0398
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb930
   Instruction: store [P]0x16c0408 [P]0x16c0498
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb900
   Instruction: load [P]0x16c05b8
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb960
   Instruction: store [P]0x16c0628 [P]0x16c06b8
   Instruction: load [P]0x16bc188
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb960
   Instruction: load [P]0x16c0838
   Instruction: fmul [P]0x16c07a8 [P]0x16c08a8
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb930
   Instruction: load [P]0x16c09a8
   Instruction: fsub [P]0x16c0920 [P]0x16c0a18
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb900
   Instruction: store [P]0x16c0a90 [P]0x16c0b18
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb960
   Instruction: load [P]0x16c0c38
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb930
   Instruction: store [P]0x16c0ca8 [P]0x16c0d38
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb900
   Instruction: load [P]0x16c0e58
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb960
   Instruction: store [P]0x16c0ec8 [P]0x16c0f58
   Instruction: load [P]0x16bbca8
   Instruction: load [P]0x16bbe28
   Instruction: add [P]0x16c1048 [P]0x16c10a8
   Instruction: store [P]0x16c1120 [P]0x16bbd08
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb900
   Instruction: load [P]0x16c1228
   Instruction: load [P]0x16bbb28
   Instruction: load [P]0x16bbd08
   Instruction: zext [P]0x16c1358
   Instruction: getelementptr [P]0x16c12f8 [P]0x16c13b8
   Instruction: load [P]0x16c1430
   Instruction: fpext [P]0x16c1498
   Instruction: fmul [P]0x16c1298 [P]0x16c14f8
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb900
   Instruction: load [P]0x16c15f8
   Instruction: load [P]0x16bbb88
   Instruction: load [P]0x16bbd08
   Instruction: zext [P]0x16c1728
   Instruction: getelementptr [P]0x16c16c8 [P]0x16c1788
   Instruction: load [P]0x16c1800
   Instruction: fpext [P]0x16c1868
   Instruction: fmul [P]0x16c1668 [P]0x16c18c8
   Instruction: fsub [P]0x16c1570 [P]0x16c1940
   Instruction: store [P]0x16c19b0 [P]0x16bbee8
   Instruction: getelementptr [P]0x16bc1e8 [P]0x16bb900 [P]0x16bb900
   Instruction: load [P]0x16c1ab8
   Instruction: load [P]0x16bbb88
   Instruction: load [P]0x16bbd08
   Instruction: zext [P]0x16c1be8
   Instruction: getelementptr [P]0x16c1b88 [P]0x16c1c48
   Instruction: load [P]0x16c1cc0
   Instruction: fpext [P]0x16c1d28
   Instruction: fmul [P]0x16c1b28 [P]0x16c1d88
   Instruction: getelementptr [P]0x16bc248 [P]0x16bb900 [P]0x16bb900
   Instruction: load [P]0x16c1e88
   Instruction: load [P]0x16bbb28
   Instruction: load [P]0x16bbd08
   Instruction: zext [P]0x16c1fb8
   Instruction: getelementptr [P]0x16c1f58 [P]0x16c2018
   Instruction: load [P]0x16c2090
   Instruction: fpext [P]0x16c20f8
   Instruction: fmul [P]0x16c1ef8 [P]0x16c2158
   Instruction: fadd [P]0x16c1e00 [P]0x16c21d0
   Instruction: store [P]0x16c2240 [P]0x16bbf48
   Instruction: load [P]0x16bbb28
   Instruction: load [P]0x16bbca8
   Instruction: zext [P]0x16c2378
   Instruction: getelementptr [P]0x16c2318 [P]0x16c23d8
   Instruction: load [P]0x16c2450
   Instruction: fpext [P]0x16c24b8
   Instruction: load [P]0x16bbee8
   Instruction: fsub [P]0x16c2518 [P]0x16c2578
   Instruction: fptrunc [P]0x16c25f0
   Instruction: load [P]0x16bbb28
   Instruction: load [P]0x16bbd08
   Instruction: zext [P]0x16c2708
   Instruction: getelementptr [P]0x16c26a8 [P]0x16c2768
   Instruction: store [P]0x16c2648 [P]0x16c27e0
   Instruction: load [P]0x16bbb88
   Instruction: load [P]0x16bbca8
   Instruction: zext [P]0x16c2928
   Instruction: getelementptr [P]0x16c28c8 [P]0x16c2988
   Instruction: load [P]0x16c2a00
   Instruction: fpext [P]0x16c2a68
   Instruction: load [P]0x16bbf48
   Instruction: fsub [P]0x16c2ac8 [P]0x16c2b28
   Instruction: fptrunc [P]0x16c2ba0
   Instruction: load [P]0x16bbb88
   Instruction: load [P]0x16bbd08
   Instruction: zext [P]0x16b4018
   Instruction: getelementptr [P]0x16b3fb8 [P]0x16b4078
   Instruction: store [P]0x16b3f58 [P]0x16b40f0
   Instruction: load [P]0x16bbee8
   Instruction: load [P]0x16bbb28
   Instruction: load [P]0x16bbca8
   Instruction: zext [P]0x16b4298
   Instruction: getelementptr [P]0x16b4238 [P]0x16b42f8
   Instruction: load [P]0x16b4370
   Instruction: fpext [P]0x16b43d8
   Instruction: fadd [P]0x16b4438 [P]0x16b41d8
   Instruction: fptrunc [P]0x16b44b0
   Instruction: store [P]0x16b4508 [P]0x16b4370
   Instruction: load [P]0x16bbf48
   Instruction: load [P]0x16bbb88
   Instruction: load [P]0x16bbca8
   Instruction: zext [P]0x16b46a8
   Instruction: getelementptr [P]0x16b4648 [P]0x16b4708
   Instruction: load [P]0x16b2760
   Instruction: fpext [P]0x16b27c8
   Instruction: fadd [P]0x16b2828 [P]0x16b45e8
   Instruction: fptrunc [P]0x16b28a0
   Instruction: store [P]0x16b28f8 [P]0x16b2760
   Instruction: br [P]0x16bb270
 BasicBlock: 0x16bb270  wBasicBlock: 0x16d8940 [fft_float%28], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbca8
   Instruction: add [P]0x16b2a38 [P]0x16aae20
   Instruction: store [P]0x16b2ab0 [P]0x16bbca8
   Instruction: load [P]0x16bbd68
   Instruction: add [P]0x16b2b88 [P]0x16aae20
   Instruction: store [P]0x16b2c00 [P]0x16bbd68
   Instruction: br [P]0x16bb1d0
 BasicBlock: 0x16bb2c0  wBasicBlock: 0x16d8da0 [fft_float%29], Type: 1 [ONE_BRANCH]
   Instruction: br [P]0x16bb310
 BasicBlock: 0x16bb310  wBasicBlock: 0x16d8ee0 [fft_float%30], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbdc8
   Instruction: load [P]0x16bbc48
   Instruction: add [P]0x16b2df8 [P]0x16b2d98
   Instruction: store [P]0x16b2e70 [P]0x16bbc48
   Instruction: br [P]0x16bb130
 BasicBlock: 0x16bb360  wBasicBlock: 0x16d9220 [fft_float%31], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbdc8
   Instruction: store [P]0x16b2fa8 [P]0x16bbe28
   Instruction: br [P]0x16bb3b0
 BasicBlock: 0x16bb3b0  wBasicBlock: 0x16d9460 [fft_float%32], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbdc8
   Instruction: shl [P]0x16b30e8 [P]0x16aae20
   Instruction: store [P]0x16b3160 [P]0x16bbdc8
   Instruction: br [P]0x16bb090
 BasicBlock: 0x16bb400  wBasicBlock: 0x16d9730 [fft_float%33], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16bba08
   Instruction: icmp [P]0x16b3298 [P]0x16aab80
   Instruction: br [P]0x16b3310 [P]0x16bb5e0 [P]0x16bb450
 BasicBlock: 0x16bb450  wBasicBlock: 0x16d99b0 [fft_float%34], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bb9a8
   Instruction: uitofp [P]0x16b33f8
   Instruction: store [P]0x16b3458 [P]0x16bc308
   Instruction: store [P]0x16aab80 [P]0x16bbc48
   Instruction: br [P]0x16bb4a0
 BasicBlock: 0x16bb4a0  wBasicBlock: 0x16d9cf0 [fft_float%35], Type: 2 [TWO_BRANCH]
   Instruction: load [P]0x16bbc48
   Instruction: load [P]0x16bb9a8
   Instruction: icmp [P]0x16b3618 [P]0x16b3678
   Instruction: br [P]0x16b36f0 [P]0x16bb590 [P]0x16bb4f0
 BasicBlock: 0x16bb4f0  wBasicBlock: 0x16d9fe0 [fft_float%36], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bc308
   Instruction: load [P]0x16bbb28
   Instruction: load [P]0x16bbc48
   Instruction: zext [P]0x16b3898
   Instruction: getelementptr [P]0x16b3838 [P]0x16b38f8
   Instruction: load [P]0x16b3970
   Instruction: fpext [P]0x16b39d8
   Instruction: fdiv [P]0x16b3a38 [P]0x16b37d8
   Instruction: fptrunc [P]0x16b3ab0
   Instruction: store [P]0x16b3b08 [P]0x16b3970
   Instruction: load [P]0x16bc308
   Instruction: load [P]0x16bbb88
   Instruction: load [P]0x16bbc48
   Instruction: zext [P]0x16b3ca8
   Instruction: getelementptr [P]0x16b3c48 [P]0x16b3d08
   Instruction: load [P]0x16b3d80
   Instruction: fpext [P]0x16b3de8
   Instruction: fdiv [P]0x16b3e48 [P]0x16b3be8
   Instruction: fptrunc [P]0x16b3ec0
   Instruction: store [P]0x16c6c48 [P]0x16b3d80
   Instruction: br [P]0x16bb540
 BasicBlock: 0x16bb540  wBasicBlock: 0x16daaa0 [fft_float%37], Type: 1 [ONE_BRANCH]
   Instruction: load [P]0x16bbc48
   Instruction: add [P]0x16c6d88 [P]0x16aae20
   Instruction: store [P]0x16c6e00 [P]0x16bbc48
   Instruction: br [P]0x16bb4a0
 BasicBlock: 0x16bb590  wBasicBlock: 0x16dad70 [fft_float%38], Type: 1 [ONE_BRANCH]
   Instruction: br [P]0x16bb5e0
 BasicBlock: 0x16bb5e0  wBasicBlock: 0x16daeb0 [fft_float%39], Type: 0 [Return]
   Instruction: ret
Function: CheckPointer(VoidTy): 0x16a9968
 BasicBlock: 0x16bac80  wBasicBlock: 0x16db110 [CheckPointer%0], Type: 2 [TWO_BRANCH]
   Instruction: alloca [P]0x16aae20
   Instruction: alloca [P]0x16aae20
   Instruction: store [P]0x16bac20 [P]0x16c70b8
   Instruction: store [P]0x16bac48 [P]0x16c7118
   Instruction: load [P]0x16c70b8
   Instruction: icmp [P]0x16c7278 [P]0x16abab0
   Instruction: br [P]0x16c72f0 [P]0x16c6f80 [P]0x16bacd0
 BasicBlock: 0x16bacd0  wBasicBlock: 0x16db590 [CheckPointer%1], Type: 1 [ONE_BRANCH]
   Instruction: load [S]stderr
   Instruction: load [P]0x16c7118
   Instruction: call   [CS-] fprintf [P]0x16c73d8 [P]0x16c7068 [P]0x16c7438 [S]fprintf
   Instruction: br [P]0x16c6f80
 BasicBlock: 0x16c6f80  wBasicBlock: 0x16db880 [CheckPointer%2], Type: 0 [Return]
   Instruction: ret
